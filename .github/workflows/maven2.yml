

name: Java CI - Mvn + GHub + Dckr + JFrog

on:
  push:
    branches: [ "main" ]

jobs:
  buildApp:
    
    runs-on: ubuntu-latest

    steps:
    - name: Step 1 - checkout the code
      uses: actions/checkout@v3

    - name: Step 2 - Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Step 3 - Compile code
      run: mvn -B compile 

    - name: Step 4 - Build package
      run: mvn -B package

#    - name: Step 5 - Temporarily save jar artifact
#      uses: actions/upload-artifact@v2
#      with:
#        name: jar-artifact
#        #path: ${{ github.workspace }}/target/*.jar
#        path: target/*.jar
#        retention-days: 1
    
 #   - name: Echo github workspace path
 #     run: |
 #       echo ${{ github.workspace }}
 #       pwd

  
 # buildImage:

 #   runs-on: ubuntu-latest
 #   needs: buildApp

 #   steps:
 #  - uses: actions/checkout@v3
    
 #   - name: Step 6 - Download jar
 #     uses: actions/download-artifact@v1
 #     with:
 #       name: jar-artifact
 #       path: target/
    
 #   - name: list directories and files
 #     run: |
 #       pwd
 #       ls -la
 #       ls -la target

    - name: Step 8 - Build Docker image
      run: |
        docker buildx create --use
        docker buildx build . -t dsener/petclinic2:latest --platform linux/amd64,linux/arm64

    - name: Step 9 - Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker push
      run: docker push dsener/petclinic2:latest

#    - uses: mr-smithers-excellent/docker-build-push@v6
#      name: Build & push Docker image
#      with:
#        image: dsener/petclinic2
#        tags: latest
#        #registry: ilaysener.jfrog.io
#        registry: registry.hub.docker.com
#          #publish images for x84 and arm 64 architectures
#        multiPlatform: true
#        platform: linux/amd64,linux/arm64
#        #dockerfile: ./Dockerfile
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}

    
    #- uses: actions/checkout@v3
    #- uses: actions/setup-java@v3
    #  with:
    #    java-version: '17'
    #    distribution: 'temurin'
    #- run: mvn --batch-mode --update-snapshots verify
    #- run: mkdir staging && cp target/*.jar staging
    #- uses: actions/upload-artifact@v3
    #  with:
    #    name: Package
    #    path: staging
